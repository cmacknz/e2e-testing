---
- name: "Create AWS keypair"
  ec2_key:
    name: "e2essh-{{runId}}"
    key_material: "{{ lookup('file', sshPublicKey) }}"
    region: us-east-2
    state: present
    tags:
      branch: "{{branch | default('Not running on CI')}}"
      build: "{{build | default('Not running on CI')}}"
      build_url: "{{buildURL | default('Not running on CI') }}"
      created_date: "{{ansible_date_time.epoch}}"
      environment: "{{type | default('Not running on CI')}}"
      git_sha: "{{ gitSha | default('Not running on CI')}}"
      repo: "{{repo | default('Not running on CI')}}"
      run_id: "{{runId | default('Not running on CI')}}"
  tags:
    - provision-stack
    - provision-node

- name: "Create {{nodeLabel}} AWS instances"
  amazon.aws.ec2_instance:
    wait: yes
    key_name: "e2essh-{{runId}}"
    region: us-east-2
    security_group: e2e
    image_id: '{{nodeImage}}'
    instance_type: '{{nodeInstanceType}}'
    tags:
      branch: "{{branch | default('Not running on CI')}}"
      build: "{{build | default('Not running on CI')}}"
      build_url: "{{buildURL | default('Not running on CI') }}"
      created_date: "{{ansible_date_time.epoch}}"
      environment: "{{type | default('Not running on CI')}}"
      git_sha: "{{ gitSha | default('Not running on CI')}}"
      kind: "{{nodeLabel}}"
      name: "e2e-{{nodeLabel}}-{{runId}}"
      reaper_mark: "e2e-testing-vm"
      repo: "{{repo | default('Not running on CI')}}"
      run_id: "{{runId | default('Not running on CI')}}"
    exact_count: 1
    name: "e2e-{{nodeLabel}}-{{runId}}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_type: gp3
          volume_size: 10
          delete_on_termination: true
      - device_name: /dev/xvda
        ebs:
          volume_type: gp3
          volume_size: 200
          delete_on_termination: true
    ebs_optimized: yes
  register: ec2
  tags:
    - provision-stack
    - provision-node

- debug: var=ec2

- name: Add AWS host to ssh address list
  become: no
  lineinfile:
    state: present
    line: "- {{nodeUser}}@{{addr.public_ip}}"
    insertafter: EOF
    dest: "{{workspace}}/{{nodeLabel}}-sshhosts"
    create: yes
  loop: "{{ ec2.instances }}"
  loop_control:
    loop_var: addr
  tags:
    - provision-stack
    - provision-node

- name: Add stack AWS host to ssh address list
  become: no
  copy:
    dest: "{{workspace}}/.ci/.stack-host-ip"
    content: "{{addr.public_ip}}"
    force: true
  loop: "{{ ec2.instances }}"
  loop_control:
    loop_var: addr
  tags:
    - provision-stack

- name: Add node AWS host to ssh address list
  become: no
  copy:
    dest: "{{workspace}}/.ci/.node-host-ip"
    content: "{{addr.public_ip}}"
    force: true
  loop: "{{ ec2.instances }}"
  loop_control:
    loop_var: addr
  tags:
    - provision-node

- name: Wait for SSH to come up
  wait_for: host={{ nodeItem.public_ip }} port=22 delay=10
  loop: "{{ ec2.instances }}"
  loop_control:
    loop_var: nodeItem
  tags:
    - provision-stack
    - provision-node
